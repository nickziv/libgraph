/*
 * Generated by dtrace(1M).
 */

#ifndef	_GRAPH_PROVIDER_H
#define	_GRAPH_PROVIDER_H

#include <unistd.h>

#ifdef	__cplusplus
extern "C" {
#endif

#if _DTRACE_VERSION

#define	GRAPH_BFS_BEGIN(arg0) \
	__dtrace_graph___bfs_begin(arg0)
#ifndef	__sparc
#define	GRAPH_BFS_BEGIN_ENABLED() \
	__dtraceenabled_graph___bfs_begin()
#else
#define	GRAPH_BFS_BEGIN_ENABLED() \
	__dtraceenabled_graph___bfs_begin(0)
#endif
#define	GRAPH_BFS_DEQ(arg0) \
	__dtrace_graph___bfs_deq(arg0)
#ifndef	__sparc
#define	GRAPH_BFS_DEQ_ENABLED() \
	__dtraceenabled_graph___bfs_deq()
#else
#define	GRAPH_BFS_DEQ_ENABLED() \
	__dtraceenabled_graph___bfs_deq(0)
#endif
#define	GRAPH_BFS_END(arg0) \
	__dtrace_graph___bfs_end(arg0)
#ifndef	__sparc
#define	GRAPH_BFS_END_ENABLED() \
	__dtraceenabled_graph___bfs_end()
#else
#define	GRAPH_BFS_END_ENABLED() \
	__dtraceenabled_graph___bfs_end(0)
#endif
#define	GRAPH_BFS_ENQ(arg0) \
	__dtrace_graph___bfs_enq(arg0)
#ifndef	__sparc
#define	GRAPH_BFS_ENQ_ENABLED() \
	__dtraceenabled_graph___bfs_enq()
#else
#define	GRAPH_BFS_ENQ_ENABLED() \
	__dtraceenabled_graph___bfs_enq(0)
#endif
#define	GRAPH_BFS_RDNT_BEGIN(arg0) \
	__dtrace_graph___bfs_rdnt_begin(arg0)
#ifndef	__sparc
#define	GRAPH_BFS_RDNT_BEGIN_ENABLED() \
	__dtraceenabled_graph___bfs_rdnt_begin()
#else
#define	GRAPH_BFS_RDNT_BEGIN_ENABLED() \
	__dtraceenabled_graph___bfs_rdnt_begin(0)
#endif
#define	GRAPH_BFS_RDNT_DEQ(arg0) \
	__dtrace_graph___bfs_rdnt_deq(arg0)
#ifndef	__sparc
#define	GRAPH_BFS_RDNT_DEQ_ENABLED() \
	__dtraceenabled_graph___bfs_rdnt_deq()
#else
#define	GRAPH_BFS_RDNT_DEQ_ENABLED() \
	__dtraceenabled_graph___bfs_rdnt_deq(0)
#endif
#define	GRAPH_BFS_RDNT_END(arg0) \
	__dtrace_graph___bfs_rdnt_end(arg0)
#ifndef	__sparc
#define	GRAPH_BFS_RDNT_END_ENABLED() \
	__dtraceenabled_graph___bfs_rdnt_end()
#else
#define	GRAPH_BFS_RDNT_END_ENABLED() \
	__dtraceenabled_graph___bfs_rdnt_end(0)
#endif
#define	GRAPH_BFS_RDNT_ENQ(arg0) \
	__dtrace_graph___bfs_rdnt_enq(arg0)
#ifndef	__sparc
#define	GRAPH_BFS_RDNT_ENQ_ENABLED() \
	__dtraceenabled_graph___bfs_rdnt_enq()
#else
#define	GRAPH_BFS_RDNT_ENQ_ENABLED() \
	__dtraceenabled_graph___bfs_rdnt_enq(0)
#endif
#define	GRAPH_BFS_VISIT(arg0) \
	__dtrace_graph___bfs_visit(arg0)
#ifndef	__sparc
#define	GRAPH_BFS_VISIT_ENABLED() \
	__dtraceenabled_graph___bfs_visit()
#else
#define	GRAPH_BFS_VISIT_ENABLED() \
	__dtraceenabled_graph___bfs_visit(0)
#endif
#define	GRAPH_DFS_BEGIN(arg0) \
	__dtrace_graph___dfs_begin(arg0)
#ifndef	__sparc
#define	GRAPH_DFS_BEGIN_ENABLED() \
	__dtraceenabled_graph___dfs_begin()
#else
#define	GRAPH_DFS_BEGIN_ENABLED() \
	__dtraceenabled_graph___dfs_begin(0)
#endif
#define	GRAPH_DFS_BM(arg0, arg1, arg2, arg3) \
	__dtrace_graph___dfs_bm(arg0, arg1, arg2, arg3)
#ifndef	__sparc
#define	GRAPH_DFS_BM_ENABLED() \
	__dtraceenabled_graph___dfs_bm()
#else
#define	GRAPH_DFS_BM_ENABLED() \
	__dtraceenabled_graph___dfs_bm(0)
#endif
#define	GRAPH_DFS_END(arg0) \
	__dtrace_graph___dfs_end(arg0)
#ifndef	__sparc
#define	GRAPH_DFS_END_ENABLED() \
	__dtraceenabled_graph___dfs_end()
#else
#define	GRAPH_DFS_END_ENABLED() \
	__dtraceenabled_graph___dfs_end(0)
#endif
#define	GRAPH_DFS_POP(arg0, arg1) \
	__dtrace_graph___dfs_pop(arg0, arg1)
#ifndef	__sparc
#define	GRAPH_DFS_POP_ENABLED() \
	__dtraceenabled_graph___dfs_pop()
#else
#define	GRAPH_DFS_POP_ENABLED() \
	__dtraceenabled_graph___dfs_pop(0)
#endif
#define	GRAPH_DFS_PUSH(arg0, arg1) \
	__dtrace_graph___dfs_push(arg0, arg1)
#ifndef	__sparc
#define	GRAPH_DFS_PUSH_ENABLED() \
	__dtraceenabled_graph___dfs_push()
#else
#define	GRAPH_DFS_PUSH_ENABLED() \
	__dtraceenabled_graph___dfs_push(0)
#endif
#define	GRAPH_DFS_RDNT_BEGIN(arg0) \
	__dtrace_graph___dfs_rdnt_begin(arg0)
#ifndef	__sparc
#define	GRAPH_DFS_RDNT_BEGIN_ENABLED() \
	__dtraceenabled_graph___dfs_rdnt_begin()
#else
#define	GRAPH_DFS_RDNT_BEGIN_ENABLED() \
	__dtraceenabled_graph___dfs_rdnt_begin(0)
#endif
#define	GRAPH_DFS_RDNT_BM(arg0, arg1, arg2, arg3) \
	__dtrace_graph___dfs_rdnt_bm(arg0, arg1, arg2, arg3)
#ifndef	__sparc
#define	GRAPH_DFS_RDNT_BM_ENABLED() \
	__dtraceenabled_graph___dfs_rdnt_bm()
#else
#define	GRAPH_DFS_RDNT_BM_ENABLED() \
	__dtraceenabled_graph___dfs_rdnt_bm(0)
#endif
#define	GRAPH_DFS_RDNT_END(arg0) \
	__dtrace_graph___dfs_rdnt_end(arg0)
#ifndef	__sparc
#define	GRAPH_DFS_RDNT_END_ENABLED() \
	__dtraceenabled_graph___dfs_rdnt_end()
#else
#define	GRAPH_DFS_RDNT_END_ENABLED() \
	__dtraceenabled_graph___dfs_rdnt_end(0)
#endif
#define	GRAPH_DFS_RDNT_POP(arg0, arg1) \
	__dtrace_graph___dfs_rdnt_pop(arg0, arg1)
#ifndef	__sparc
#define	GRAPH_DFS_RDNT_POP_ENABLED() \
	__dtraceenabled_graph___dfs_rdnt_pop()
#else
#define	GRAPH_DFS_RDNT_POP_ENABLED() \
	__dtraceenabled_graph___dfs_rdnt_pop(0)
#endif
#define	GRAPH_DFS_RDNT_PUSH(arg0, arg1) \
	__dtrace_graph___dfs_rdnt_push(arg0, arg1)
#ifndef	__sparc
#define	GRAPH_DFS_RDNT_PUSH_ENABLED() \
	__dtraceenabled_graph___dfs_rdnt_push()
#else
#define	GRAPH_DFS_RDNT_PUSH_ENABLED() \
	__dtraceenabled_graph___dfs_rdnt_push(0)
#endif
#define	GRAPH_DFS_VISIT(arg0, arg1) \
	__dtrace_graph___dfs_visit(arg0, arg1)
#ifndef	__sparc
#define	GRAPH_DFS_VISIT_ENABLED() \
	__dtraceenabled_graph___dfs_visit()
#else
#define	GRAPH_DFS_VISIT_ENABLED() \
	__dtraceenabled_graph___dfs_visit(0)
#endif
#define	GRAPH_GOT_HERE(arg0) \
	__dtrace_graph___got_here(arg0)
#ifndef	__sparc
#define	GRAPH_GOT_HERE_ENABLED() \
	__dtraceenabled_graph___got_here()
#else
#define	GRAPH_GOT_HERE_ENABLED() \
	__dtraceenabled_graph___got_here(0)
#endif


extern void __dtrace_graph___bfs_begin(lg_graph_t *);
#ifndef	__sparc
extern int __dtraceenabled_graph___bfs_begin(void);
#else
extern int __dtraceenabled_graph___bfs_begin(long);
#endif
extern void __dtrace_graph___bfs_deq(gelem_t);
#ifndef	__sparc
extern int __dtraceenabled_graph___bfs_deq(void);
#else
extern int __dtraceenabled_graph___bfs_deq(long);
#endif
extern void __dtrace_graph___bfs_end(lg_graph_t *);
#ifndef	__sparc
extern int __dtraceenabled_graph___bfs_end(void);
#else
extern int __dtraceenabled_graph___bfs_end(long);
#endif
extern void __dtrace_graph___bfs_enq(gelem_t);
#ifndef	__sparc
extern int __dtraceenabled_graph___bfs_enq(void);
#else
extern int __dtraceenabled_graph___bfs_enq(long);
#endif
extern void __dtrace_graph___bfs_rdnt_begin(lg_graph_t *);
#ifndef	__sparc
extern int __dtraceenabled_graph___bfs_rdnt_begin(void);
#else
extern int __dtraceenabled_graph___bfs_rdnt_begin(long);
#endif
extern void __dtrace_graph___bfs_rdnt_deq(gelem_t);
#ifndef	__sparc
extern int __dtraceenabled_graph___bfs_rdnt_deq(void);
#else
extern int __dtraceenabled_graph___bfs_rdnt_deq(long);
#endif
extern void __dtrace_graph___bfs_rdnt_end(lg_graph_t *);
#ifndef	__sparc
extern int __dtraceenabled_graph___bfs_rdnt_end(void);
#else
extern int __dtraceenabled_graph___bfs_rdnt_end(long);
#endif
extern void __dtrace_graph___bfs_rdnt_enq(gelem_t);
#ifndef	__sparc
extern int __dtraceenabled_graph___bfs_rdnt_enq(void);
#else
extern int __dtraceenabled_graph___bfs_rdnt_enq(long);
#endif
extern void __dtrace_graph___bfs_visit(gelem_t);
#ifndef	__sparc
extern int __dtraceenabled_graph___bfs_visit(void);
#else
extern int __dtraceenabled_graph___bfs_visit(long);
#endif
extern void __dtrace_graph___dfs_begin(lg_graph_t *);
#ifndef	__sparc
extern int __dtraceenabled_graph___dfs_begin(void);
#else
extern int __dtraceenabled_graph___dfs_begin(long);
#endif
extern void __dtrace_graph___dfs_bm(lg_graph_t *, void *, gelem_t, gelem_t);
#ifndef	__sparc
extern int __dtraceenabled_graph___dfs_bm(void);
#else
extern int __dtraceenabled_graph___dfs_bm(long);
#endif
extern void __dtrace_graph___dfs_end(lg_graph_t *);
#ifndef	__sparc
extern int __dtraceenabled_graph___dfs_end(void);
#else
extern int __dtraceenabled_graph___dfs_end(long);
#endif
extern void __dtrace_graph___dfs_pop(lg_graph_t *, gelem_t);
#ifndef	__sparc
extern int __dtraceenabled_graph___dfs_pop(void);
#else
extern int __dtraceenabled_graph___dfs_pop(long);
#endif
extern void __dtrace_graph___dfs_push(lg_graph_t *, gelem_t);
#ifndef	__sparc
extern int __dtraceenabled_graph___dfs_push(void);
#else
extern int __dtraceenabled_graph___dfs_push(long);
#endif
extern void __dtrace_graph___dfs_rdnt_begin(lg_graph_t *);
#ifndef	__sparc
extern int __dtraceenabled_graph___dfs_rdnt_begin(void);
#else
extern int __dtraceenabled_graph___dfs_rdnt_begin(long);
#endif
extern void __dtrace_graph___dfs_rdnt_bm(lg_graph_t *, void *, gelem_t, gelem_t);
#ifndef	__sparc
extern int __dtraceenabled_graph___dfs_rdnt_bm(void);
#else
extern int __dtraceenabled_graph___dfs_rdnt_bm(long);
#endif
extern void __dtrace_graph___dfs_rdnt_end(lg_graph_t *);
#ifndef	__sparc
extern int __dtraceenabled_graph___dfs_rdnt_end(void);
#else
extern int __dtraceenabled_graph___dfs_rdnt_end(long);
#endif
extern void __dtrace_graph___dfs_rdnt_pop(lg_graph_t *, gelem_t);
#ifndef	__sparc
extern int __dtraceenabled_graph___dfs_rdnt_pop(void);
#else
extern int __dtraceenabled_graph___dfs_rdnt_pop(long);
#endif
extern void __dtrace_graph___dfs_rdnt_push(lg_graph_t *, gelem_t);
#ifndef	__sparc
extern int __dtraceenabled_graph___dfs_rdnt_push(void);
#else
extern int __dtraceenabled_graph___dfs_rdnt_push(long);
#endif
extern void __dtrace_graph___dfs_visit(lg_graph_t *, gelem_t);
#ifndef	__sparc
extern int __dtraceenabled_graph___dfs_visit(void);
#else
extern int __dtraceenabled_graph___dfs_visit(long);
#endif
extern void __dtrace_graph___got_here(int);
#ifndef	__sparc
extern int __dtraceenabled_graph___got_here(void);
#else
extern int __dtraceenabled_graph___got_here(long);
#endif

#else

#define	GRAPH_BFS_BEGIN(arg0)
#define	GRAPH_BFS_BEGIN_ENABLED() (0)
#define	GRAPH_BFS_DEQ(arg0)
#define	GRAPH_BFS_DEQ_ENABLED() (0)
#define	GRAPH_BFS_END(arg0)
#define	GRAPH_BFS_END_ENABLED() (0)
#define	GRAPH_BFS_ENQ(arg0)
#define	GRAPH_BFS_ENQ_ENABLED() (0)
#define	GRAPH_BFS_RDNT_BEGIN(arg0)
#define	GRAPH_BFS_RDNT_BEGIN_ENABLED() (0)
#define	GRAPH_BFS_RDNT_DEQ(arg0)
#define	GRAPH_BFS_RDNT_DEQ_ENABLED() (0)
#define	GRAPH_BFS_RDNT_END(arg0)
#define	GRAPH_BFS_RDNT_END_ENABLED() (0)
#define	GRAPH_BFS_RDNT_ENQ(arg0)
#define	GRAPH_BFS_RDNT_ENQ_ENABLED() (0)
#define	GRAPH_BFS_VISIT(arg0)
#define	GRAPH_BFS_VISIT_ENABLED() (0)
#define	GRAPH_DFS_BEGIN(arg0)
#define	GRAPH_DFS_BEGIN_ENABLED() (0)
#define	GRAPH_DFS_BM(arg0, arg1, arg2, arg3)
#define	GRAPH_DFS_BM_ENABLED() (0)
#define	GRAPH_DFS_END(arg0)
#define	GRAPH_DFS_END_ENABLED() (0)
#define	GRAPH_DFS_POP(arg0, arg1)
#define	GRAPH_DFS_POP_ENABLED() (0)
#define	GRAPH_DFS_PUSH(arg0, arg1)
#define	GRAPH_DFS_PUSH_ENABLED() (0)
#define	GRAPH_DFS_RDNT_BEGIN(arg0)
#define	GRAPH_DFS_RDNT_BEGIN_ENABLED() (0)
#define	GRAPH_DFS_RDNT_BM(arg0, arg1, arg2, arg3)
#define	GRAPH_DFS_RDNT_BM_ENABLED() (0)
#define	GRAPH_DFS_RDNT_END(arg0)
#define	GRAPH_DFS_RDNT_END_ENABLED() (0)
#define	GRAPH_DFS_RDNT_POP(arg0, arg1)
#define	GRAPH_DFS_RDNT_POP_ENABLED() (0)
#define	GRAPH_DFS_RDNT_PUSH(arg0, arg1)
#define	GRAPH_DFS_RDNT_PUSH_ENABLED() (0)
#define	GRAPH_DFS_VISIT(arg0, arg1)
#define	GRAPH_DFS_VISIT_ENABLED() (0)
#define	GRAPH_GOT_HERE(arg0)
#define	GRAPH_GOT_HERE_ENABLED() (0)

#endif


#ifdef	__cplusplus
}
#endif

#endif	/* _GRAPH_PROVIDER_H */
